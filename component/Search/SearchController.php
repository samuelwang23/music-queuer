<?php

namespace Neoan3\Component\Search;

use Neoan3\Frame\Demo;

/**
 * Class SearchController
 * @package Neoan3\Component\Search
 *
 * Generated by neoan3-cli for neoan3 v3.*
 */

class SearchController extends Demo{

    /**
     * transformSpotify
     * @param array $spotifyData
     * @param array $result
     */

     function transformSpotify(array $spotifyData): array
     {
         $results = [];
         if(!isset($spotifyData["albums"])){
             return [];
         }
         foreach($spotifyData["albums"]["items"] as $album){
             $result = [];
             $result["artist"] = $album["artists"][0]["name"];
             $result["title"] = $album["name"];
             $result["cover"] = $album["images"][1]["url"];
             $result["release"] = $album["release_date"];
             $result["id"] = $album["id"];
             $result["link"] = $album["external_urls"]["spotify"];
             array_push($results, $result);
             
         }

         return $results;
     }

     /**
      * @return string
      */
    function getAuthToken(): string
    {
        $music_queuer_creds = getCredentials()["music-queuer"];
        $CLIENT_ID = $music_queuer_creds["spotify_client_id"];
        $CLIENT_SECRET = $music_queuer_creds["spotify_client_secret"];
        $authorization =  base64_encode($CLIENT_ID.":".$CLIENT_SECRET);

        $ch = curl_init();

        curl_setopt($ch, CURLOPT_URL, 'https://accounts.spotify.com/api/token');
        curl_setopt($ch, CURLOPT_RETURNTRANSFER, 1);
        curl_setopt($ch, CURLOPT_POST, 1);
        curl_setopt($ch, CURLOPT_POSTFIELDS, "grant_type=client_credentials");

        $headers = array();
        $headers[] = 'Authorization: Basic '.$authorization;
        $headers[] = 'Content-Type: application/x-www-form-urlencoded';
        curl_setopt($ch, CURLOPT_HTTPHEADER, $headers);

        $result = json_decode(curl_exec($ch), true);
        if (curl_errno($ch)) {
            echo 'Error:' . curl_error($ch);
        }
        curl_close($ch);
        return $result["access_token"];

    }

    /**
    * GET: api.v1/search
    * GET: api.v1/search/{id}
    * GET: api.v1/search?{query-string}
    * @param array $params
    * @return array
    */
    function getSearch(array $params = []): array
    {
        $token = $this->getAuthToken();
        
        $ch = curl_init();
        curl_setopt($ch, CURLOPT_URL, 'https://api.spotify.com/v1/search?q='.$params['q'].'&type=album&limit=12');
        curl_setopt($ch, CURLOPT_RETURNTRANSFER, 1);
        curl_setopt($ch, CURLOPT_CUSTOMREQUEST, 'GET');


        $headers = array();
        $headers[] = 'Accept: application/json';
        $headers[] = 'Content-Type: application/json';
        
        $headers[] = 'Authorization: Bearer '.$token;
        curl_setopt($ch, CURLOPT_HTTPHEADER, $headers);

        $result = curl_exec($ch);
        if (curl_errno($ch)) {
            echo 'Error:' . curl_error($ch);
        }
        curl_close($ch);
        
        
        
        return $this->transformSpotify(json_decode($result, true));
    }

    /**
     * POST: api.v1/search
     * @param $body
     * @return array
     */
    function postSearch(array $body): array
    {
        return $body;
    }
}
